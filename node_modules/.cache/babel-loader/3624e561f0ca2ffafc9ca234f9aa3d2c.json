{"ast":null,"code":"import _defineProperty from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/etontest/Desktop/Webshop/src/components/Comment/AddComment/AddComment.js\";\nimport React, { Component } from 'react';\nimport fire from '../../../config/config';\nimport { connect } from 'react-redux';\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/GeneralButton/Button';\nimport classes from './AddComment.module.scss';\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment(props) {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddComment).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.addCommentHandler = function () {\n      if (_this.props.userId && !_this.props.userInfo) {\n        alert('You need to fill your information before leaving a comment');\n      } else if (_this.props.userId) {\n        fire.database().ref('item/' + _this.props.id + '/comments').push({\n          firstName: _this.props.userInfo.firstName,\n          lastName: _this.props.userInfo.lastName,\n          title: _this.state.title,\n          comment: _this.state.comment\n        }).then(function (u) {\n          alert('Comment added successfuly');\n          window.location.reload();\n        }).catch(function (e) {\n          console.log(e);\n        });\n      } else {\n        alert('To leave a comment you need to be logged in!');\n      }\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      title: '',\n      comment: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      var style = {\n        marginLeft: '0'\n      };\n      return React.createElement(\"div\", {\n        className: classes.AddComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.Title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Title\"), React.createElement(Input, {\n        style: style,\n        value: this.state.title,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"title\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.Comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"textarea\", {\n        style: style,\n        rows: \"4\",\n        cols: \"50\",\n        value: this.state.comment,\n        onChange: this.handleChange,\n        type: \"textarea\",\n        name: \"comment\",\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: this.addCommentHandler,\n        style: {\n          width: 'none'\n        },\n        className: classes.Button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Add Comment\"));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.userInfo,\n    userId: state.userId\n  };\n};\n\nexport default connect(mapStateToProps)(AddComment);","map":{"version":3,"sources":["/home/etontest/Desktop/Webshop/src/components/Comment/AddComment/AddComment.js"],"names":["React","Component","fire","connect","Input","Button","classes","AddComment","props","handleChange","e","setState","target","name","value","addCommentHandler","userId","userInfo","alert","database","ref","id","push","firstName","lastName","title","state","comment","then","u","window","location","reload","catch","console","log","bind","style","marginLeft","Title","Comment","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fire from '../../../config/config';\nimport { connect } from 'react-redux';\n\nimport Input from '../../UI/Input/Input';\nimport Button from '../../UI/Button/GeneralButton/Button';\n\nimport classes from './AddComment.module.scss';\n\nclass AddComment extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.state = {\n\t\t\ttitle: '',\n\t\t\tcomment: ''\n\t\t};\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\taddCommentHandler = () => {\n\t\tif (this.props.userId && !this.props.userInfo) {\n\t\t\talert('You need to fill your information before leaving a comment');\n\t\t} else if (this.props.userId) {\n\t\t\tfire\n\t\t\t\t.database()\n\t\t\t\t.ref('item/' + this.props.id + '/comments')\n\t\t\t\t.push({\n\t\t\t\t\tfirstName: this.props.userInfo.firstName,\n\t\t\t\t\tlastName: this.props.userInfo.lastName,\n\t\t\t\t\ttitle: this.state.title,\n\t\t\t\t\tcomment: this.state.comment\n\t\t\t\t})\n\t\t\t\t.then((u) => {\n\t\t\t\t\talert('Comment added successfuly');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t});\n\t\t} else {\n\t\t\talert('To leave a comment you need to be logged in!');\n\t\t}\n\t};\n\n\trender() {\n\t\tconst style = {\n\t\t\tmarginLeft: '0'\n\t\t};\n\t\treturn (\n\t\t\t<div className={classes.AddComment}>\n\t\t\t\t<div className={classes.Title}>\n\t\t\t\t\t<label>Title</label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.Comment}>\n\t\t\t\t\t<label>Comment</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\trows=\"4\"\n\t\t\t\t\t\tcols=\"50\"\n\t\t\t\t\t\tvalue={this.state.comment}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\tname=\"comment\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Button onClick={this.addCommentHandler} style={{ width: 'none' }} className={classes.Button}>\n\t\t\t\t\tAdd Comment\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tuserInfo: state.userInfo,\n\t\tuserId: state.userId\n\t};\n};\n\nexport default connect(mapStateToProps)(AddComment);\n"]},"metadata":{},"sourceType":"module"}