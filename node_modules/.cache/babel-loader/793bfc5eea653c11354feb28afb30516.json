{"ast":null,"code":"import _classCallCheck from \"/home/etontest/Desktop/webshop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/etontest/Desktop/webshop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/etontest/Desktop/webshop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/etontest/Desktop/webshop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/etontest/Desktop/webshop/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/etontest/Desktop/webshop/src/components/CheckboxList/CheckboxList.js\";\nimport React, { Component } from 'react';\nimport Checkbox from './CheckboxItem/Checkbox';\nimport Button from '../UI/Button/Button';\nimport classes from './CheckboxList.module.scss';\nvar checkboxItems = ['Shoes', 'Socks', 'Hoodies', 'Shorts', 'T-Shirts', 'Shirts', 'Jackets', 'Jeans', 'Underwear'];\n\nvar CheckboxList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckboxList, _Component);\n\n  function CheckboxList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckboxList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckboxList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      type: []\n    };\n\n    _this.componentWillMount = function () {\n      _this.selectedCheckboxes = new Set();\n    };\n\n    _this.toggleCheckbox = function (label) {\n      var newStateType = _this.state.type;\n\n      if (newStateType.includes(label)) {\n        for (var i = 0; newStateType.length >= i; i++) {\n          if (newStateType[i] === label) {\n            newStateType.splice(i, 1);\n          }\n        }\n      } else {\n        newStateType.push(label);\n\n        _this.setState({\n          type: newStateType\n        });\n      }\n    };\n\n    _this.handleFormSubmit = function (formSubmitEvent) {\n      formSubmitEvent.preventDefault();\n\n      _this.props.onChange(_this.state.type);\n    };\n\n    _this.createCheckbox = function (label) {\n      return React.createElement(Checkbox, {\n        label: label,\n        handleCheckboxChange: _this.toggleCheckbox,\n        key: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n\n    _this.createCheckboxes = function () {\n      return checkboxItems.map(_this.createCheckbox);\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: classes.CheckboxList,\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.createCheckboxes(), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return CheckboxList;\n}(Component);\n\nexport default CheckboxList;","map":{"version":3,"sources":["/home/etontest/Desktop/webshop/src/components/CheckboxList/CheckboxList.js"],"names":["React","Component","Checkbox","Button","classes","checkboxItems","CheckboxList","state","type","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","newStateType","includes","i","length","splice","push","setState","handleFormSubmit","formSubmitEvent","preventDefault","props","onChange","createCheckbox","createCheckboxes","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,IAAMC,aAAa,GAAG,CAAE,OAAF,EAAW,OAAX,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,UAAzC,EAAqD,QAArD,EAA+D,SAA/D,EAA0E,OAA1E,EAAmF,WAAnF,CAAtB;;IAEMC,Y;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,IAAI,EAAE;AADC,K;;UAIRC,kB,GAAqB,YAAM;AAC1B,YAAKC,kBAAL,GAA0B,IAAIC,GAAJ,EAA1B;AACA,K;;UAEDC,c,GAAiB,UAACC,KAAD,EAAW;AAC3B,UAAIC,YAAY,GAAG,MAAKP,KAAL,CAAWC,IAA9B;;AACA,UAAIM,YAAY,CAACC,QAAb,CAAsBF,KAAtB,CAAJ,EAAkC;AACjC,aAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBF,YAAY,CAACG,MAAb,IAAuBD,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC9C,cAAIF,YAAY,CAACE,CAAD,CAAZ,KAAoBH,KAAxB,EAA+B;AAC9BC,YAAAA,YAAY,CAACI,MAAb,CAAoBF,CAApB,EAAuB,CAAvB;AACA;AACD;AACD,OAND,MAMO;AACNF,QAAAA,YAAY,CAACK,IAAb,CAAkBN,KAAlB;;AACA,cAAKO,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAEM;AAAR,SAAd;AACA;AACD,K;;UAEDO,gB,GAAmB,UAACC,eAAD,EAAqB;AACvCA,MAAAA,eAAe,CAACC,cAAhB;;AACA,YAAKC,KAAL,CAAWC,QAAX,CAAoB,MAAKlB,KAAL,CAAWC,IAA/B;AACA,K;;UAEDkB,c,GAAiB,UAACb,KAAD;AAAA,aAAW,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAwB,QAAA,oBAAoB,EAAE,MAAKD,cAAnD;AAAmE,QAAA,GAAG,EAAEC,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AAAA,K;;UAEjBc,gB,GAAmB;AAAA,aAAMtB,aAAa,CAACuB,GAAd,CAAkB,MAAKF,cAAvB,CAAN;AAAA,K;;;;;;;6BAEV;AACR,aACC;AAAM,QAAA,SAAS,EAAEtB,OAAO,CAACE,YAAzB;AAAuC,QAAA,QAAQ,EAAE,KAAKe,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,KAAKM,gBAAL,EADF,EAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADD;AAOA;;;;EAxCyB1B,S;;AA2C3B,eAAeK,YAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport Checkbox from './CheckboxItem/Checkbox';\nimport Button from '../UI/Button/Button';\n\nimport classes from './CheckboxList.module.scss';\n\nconst checkboxItems = [ 'Shoes', 'Socks', 'Hoodies', 'Shorts', 'T-Shirts', 'Shirts', 'Jackets', 'Jeans', 'Underwear' ];\n\nclass CheckboxList extends Component {\n\tstate = {\n\t\ttype: []\n\t};\n\n\tcomponentWillMount = () => {\n\t\tthis.selectedCheckboxes = new Set();\n\t};\n\n\ttoggleCheckbox = (label) => {\n\t\tlet newStateType = this.state.type;\n\t\tif (newStateType.includes(label)) {\n\t\t\tfor (let i = 0; newStateType.length >= i; i++) {\n\t\t\t\tif (newStateType[i] === label) {\n\t\t\t\t\tnewStateType.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tnewStateType.push(label);\n\t\t\tthis.setState({ type: newStateType });\n\t\t}\n\t};\n\n\thandleFormSubmit = (formSubmitEvent) => {\n\t\tformSubmitEvent.preventDefault();\n\t\tthis.props.onChange(this.state.type);\n\t};\n\n\tcreateCheckbox = (label) => <Checkbox label={label} handleCheckboxChange={this.toggleCheckbox} key={label} />;\n\n\tcreateCheckboxes = () => checkboxItems.map(this.createCheckbox);\n\n\trender() {\n\t\treturn (\n\t\t\t<form className={classes.CheckboxList} onSubmit={this.handleFormSubmit}>\n\t\t\t\t{this.createCheckboxes()}\n\n\t\t\t\t<Button>Save</Button>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default CheckboxList;\n"]},"metadata":{},"sourceType":"module"}