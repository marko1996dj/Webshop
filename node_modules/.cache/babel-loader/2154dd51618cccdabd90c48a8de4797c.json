{"ast":null,"code":"import _classCallCheck from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marko/Documents/Projects/Webshop/src/container/Cart/Cart.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Cart.module.scss';\nimport StoreItem from '../../components/StoreItem/StoreItem';\nimport axios from '../../axios-orders';\n\nvar Cart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cart, _Component);\n\n  function Cart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cartItems: false\n    };\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var storeItem;\n\n      if (this.state.cartItems) {\n        //if user has store items\n        var cartKeys = Object.keys(this.state.cartItems); //get key for each item\n\n        storeItem = cartKeys.map(function (cartKey //map array of keys\n        ) {\n          return React.createElement(StoreItem, {\n            imgUrl: _this2.state.cartItems[cartKey].imgUrl //send item info as props to StoreItem\n            ,\n            key: cartKey,\n            itemKey: cartKey,\n            brand: _this2.state.cartItems[cartKey].brand,\n            description: _this2.state.cartItems[cartKey].description,\n            price: _this2.state.cartItems[cartKey].price,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          });\n        });\n      } else if (!this.props.isLoggedIn) {\n        storeItem = React.createElement(\"h1\", {\n          className: classes.Login,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Please log in to view your cart items\");\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.CartItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, storeItem));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (this.props.isLoggedIn) {\n        //if user is logged in gettin all cart items from him and storing to this.state.cartItems\n        axios.get('https://webshop-9a548.firebaseio.com/users/' + this.props.userId + '/cartItems.json').then(function (response) {\n          _this3.setState({\n            cartItems: response.data\n          });\n        }).catch(function (e) {\n          console.log(e);\n        });\n      }\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    // isLoggedIn store state\n    userId: state.userId //userId store state\n\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["/home/marko/Documents/Projects/Webshop/src/container/Cart/Cart.js"],"names":["React","Component","connect","classes","StoreItem","axios","Cart","state","cartItems","storeItem","cartKeys","Object","keys","map","cartKey","imgUrl","brand","description","price","props","isLoggedIn","Login","CartItems","get","userId","then","response","setState","data","catch","e","console","log","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,I;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,SAAS,EAAE;AADJ,K;;;;;;6BAIC;AAAA;;AACR,UAAIC,SAAJ;;AAEA,UAAI,KAAKF,KAAL,CAAWC,SAAf,EAA0B;AACzB;AACA,YAAME,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAL,CAAWC,SAAvB,CAAjB,CAFyB,CAE2B;;AACpDC,QAAAA,SAAS,GAAGC,QAAQ,CAACG,GAAT,CAAa,UACxBC,OADwB,CAChB;AADgB;AAAA,iBAGxB,oBAAC,SAAD;AACC,YAAA,MAAM,EAAE,MAAI,CAACP,KAAL,CAAWC,SAAX,CAAqBM,OAArB,EAA8BC,MADvC,CAC+C;AAD/C;AAEC,YAAA,GAAG,EAAED,OAFN;AAGC,YAAA,OAAO,EAAEA,OAHV;AAIC,YAAA,KAAK,EAAE,MAAI,CAACP,KAAL,CAAWC,SAAX,CAAqBM,OAArB,EAA8BE,KAJtC;AAKC,YAAA,WAAW,EAAE,MAAI,CAACT,KAAL,CAAWC,SAAX,CAAqBM,OAArB,EAA8BG,WAL5C;AAMC,YAAA,KAAK,EAAE,MAAI,CAACV,KAAL,CAAWC,SAAX,CAAqBM,OAArB,EAA8BI,KANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHwB;AAAA,SAAb,CAAZ;AAYA,OAfD,MAeO,IAAG,CAAC,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACjCX,QAAAA,SAAS,GAAG;AAAI,UAAA,SAAS,EAAEN,OAAO,CAACkB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAZ;AACA;;AAED,aACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAElB,OAAO,CAACmB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCb,SAApC,CADD,CADD;AAKA;;;wCACmB;AAAA;;AACnB,UAAI,KAAKU,KAAL,CAAWC,UAAf,EAA2B;AAC1B;AACAf,QAAAA,KAAK,CACHkB,GADF,CACM,gDAAgD,KAAKJ,KAAL,CAAWK,MAA3D,GAAoE,iBAD1E,EAEEC,IAFF,CAEO,UAACC,QAAD,EAAc;AACnB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEnB,YAAAA,SAAS,EAAEkB,QAAQ,CAACE;AAAtB,WAAd;AACA,SAJF,EAKEC,KALF,CAKQ,UAACC,CAAD,EAAO;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,SAPF;AAQA;AACD;;;;EA7CiB7B,S;;AAgDnB,IAAMgC,eAAe,GAAG,SAAlBA,eAAkB,CAAC1B,KAAD,EAAW;AAClC,SAAO;AACNa,IAAAA,UAAU,EAAEb,KAAK,CAACa,UADZ;AACwB;AAC9BI,IAAAA,MAAM,EAAEjB,KAAK,CAACiB,MAFR,CAEe;;AAFf,GAAP;AAIA,CALD;;AAOA,eAAetB,OAAO,CAAC+B,eAAD,CAAP,CAAyB3B,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Cart.module.scss';\n\nimport StoreItem from '../../components/StoreItem/StoreItem';\nimport axios from '../../axios-orders';\n\nclass Cart extends Component {\n\tstate = {\n\t\tcartItems: false\n\t};\n\n\trender() {\n\t\tlet storeItem;\n\n\t\tif (this.state.cartItems) {\n\t\t\t//if user has store items\n\t\t\tconst cartKeys = Object.keys(this.state.cartItems); //get key for each item\n\t\t\tstoreItem = cartKeys.map((\n\t\t\t\tcartKey //map array of keys\n\t\t\t) => (\n\t\t\t\t<StoreItem\n\t\t\t\t\timgUrl={this.state.cartItems[cartKey].imgUrl} //send item info as props to StoreItem\n\t\t\t\t\tkey={cartKey}\n\t\t\t\t\titemKey={cartKey}\n\t\t\t\t\tbrand={this.state.cartItems[cartKey].brand}\n\t\t\t\t\tdescription={this.state.cartItems[cartKey].description}\n\t\t\t\t\tprice={this.state.cartItems[cartKey].price}\n\t\t\t\t/>\n\t\t\t));\n\t\t} else if(!this.props.isLoggedIn) {\n\t\t\tstoreItem = <h1 className={classes.Login}>Please log in to view your cart items</h1>\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={classes.CartItems}>{storeItem}</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\tcomponentDidMount() {\n\t\tif (this.props.isLoggedIn) {\n\t\t\t//if user is logged in gettin all cart items from him and storing to this.state.cartItems\n\t\t\taxios\n\t\t\t\t.get('https://webshop-9a548.firebaseio.com/users/' + this.props.userId + '/cartItems.json')\n\t\t\t\t.then((response) => {\n\t\t\t\t\tthis.setState({ cartItems: response.data });\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t});\n\t\t}\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLoggedIn: state.isLoggedIn, // isLoggedIn store state\n\t\tuserId: state.userId //userId store state\n\t};\n};\n\nexport default connect(mapStateToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}