{"ast":null,"code":"import _classCallCheck from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/marko/Documents/Projects/Webshop/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/marko/Documents/Projects/Webshop/src/components/CheckboxList/CheckboxItem/Checkbox.js\";\nimport React, { Component } from 'react';\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isChecked: false\n    };\n\n    _this.toggleCheckboxChange = function () {\n      var _this$props = _this.props,\n          handleCheckboxChange = _this$props.handleCheckboxChange,\n          label = _this$props.label;\n\n      _this.setState(function (_ref) {\n        var isChecked = _ref.isChecked;\n        return {\n          isChecked: !isChecked //changing isChecked state to oposite\n\n        };\n      });\n\n      handleCheckboxChange(label);\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var label = this.props.label;\n      var isChecked = this.state.isChecked;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        value: label,\n        checked: isChecked,\n        onChange: this.toggleCheckboxChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), label));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\nexport default Checkbox;","map":{"version":3,"sources":["/home/marko/Documents/Projects/Webshop/src/components/CheckboxList/CheckboxItem/Checkbox.js"],"names":["React","Component","Checkbox","state","isChecked","toggleCheckboxChange","props","handleCheckboxChange","label","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Q;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,SAAS,EAAE;AADJ,K;;UAIRC,oB,GAAuB,YAAM;AAAA,wBACY,MAAKC,KADjB;AAAA,UACpBC,oBADoB,eACpBA,oBADoB;AAAA,UACEC,KADF,eACEA,KADF;;AAG5B,YAAKC,QAAL,CAAc;AAAA,YAAGL,SAAH,QAAGA,SAAH;AAAA,eAAoB;AACjCA,UAAAA,SAAS,EAAE,CAACA,SADqB,CACX;;AADW,SAApB;AAAA,OAAd;;AAIAG,MAAAA,oBAAoB,CAACC,KAAD,CAApB;AACA,K;;;;;;;6BAEQ;AAAA,UACAA,KADA,GACU,KAAKF,KADf,CACAE,KADA;AAAA,UAEAJ,SAFA,GAEc,KAAKD,KAFnB,CAEAC,SAFA;AAIR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEI,KAA9B;AAAqC,QAAA,OAAO,EAAEJ,SAA9C;AAAyD,QAAA,QAAQ,EAAE,KAAKC,oBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEEG,KAFF,CADD,CADD;AAQA;;;;EA3BqBP,S;;AA8BvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Checkbox extends Component {\n\tstate = {\n\t\tisChecked: false\n\t};\n\n\ttoggleCheckboxChange = () => {\n\t\tconst { handleCheckboxChange, label } = this.props;\n\n\t\tthis.setState(({ isChecked }) => ({\n\t\t\tisChecked: !isChecked //changing isChecked state to oposite\n\t\t}));\n\n\t\thandleCheckboxChange(label);\n\t};\n\n\trender() {\n\t\tconst { label } = this.props;\n\t\tconst { isChecked } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\" value={label} checked={isChecked} onChange={this.toggleCheckboxChange} />\n\t\t\t\t\t{label}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}