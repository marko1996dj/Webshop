{"ast":null,"code":"import _objectSpread from \"/home/etontest/Desktop/Webshop/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './action';\nvar initialState = {\n  productInfo: '',\n  isLoggedIn: false,\n  userId: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_PRODUCT_INFO:\n      return _objectSpread({}, state, {\n        productInfo: action.productInfo\n      });\n\n    case actionTypes.IS_LOGGED_IN:\n      return _objectSpread({}, state, {\n        isLoggedIn: action.isLoggedIn\n      });\n\n    case actionTypes.ADD_USER_ID:\n      return _objectSpread({}, state, {\n        userId: action.userId\n      });\n\n    case actionTypes.IS_LOGGED_OUT:\n      return _objectSpread({}, state, {\n        userId: action.isLoggedOut\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/etontest/Desktop/Webshop/src/store/reducer.js"],"names":["actionTypes","initialState","productInfo","isLoggedIn","userId","reducer","state","action","type","ADD_PRODUCT_INFO","IS_LOGGED_IN","ADD_USER_ID","IS_LOGGED_OUT","isLoggedOut"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,MAAM,EAAE;AAHS,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAW,CAACS,gBAAjB;AACA,+BACOH,KADP;AAEIJ,QAAAA,WAAW,EAAEK,MAAM,CAACL;AAFxB;;AAIA,SAAKF,WAAW,CAACU,YAAjB;AACA,+BACOJ,KADP;AAEIH,QAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFvB;;AAIA,SAAKH,WAAW,CAACW,WAAjB;AACA,+BACOL,KADP;AAEIF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAFnB;;AAIA,SAAKJ,WAAW,CAACY,aAAjB;AACA,+BACON,KADP;AAEIF,QAAAA,MAAM,EAAEG,MAAM,CAACM;AAFnB;;AAIA;AACA,aAAOP,KAAP;AAtBJ;AAwBH,CAzBD;;AA4BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from './action';\n\nconst initialState = {\n    productInfo: '',\n    isLoggedIn: false,\n    userId: false,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_PRODUCT_INFO:\n        return {\n            ...state,\n            productInfo: action.productInfo\n        };\n        case actionTypes.IS_LOGGED_IN:\n        return {\n            ...state,\n            isLoggedIn: action.isLoggedIn\n        }\n        case actionTypes.ADD_USER_ID:\n        return{\n            ...state,\n            userId: action.userId\n        }\n        case actionTypes.IS_LOGGED_OUT:\n        return{\n            ...state,\n            userId: action.isLoggedOut\n        }\n        default:\n        return state;\n    }\n} ;\n\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}